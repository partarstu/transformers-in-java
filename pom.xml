<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2023 Taras Paruta

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

 SPDX-License-Identifier: Apache-2.0
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.tarik</groupId>
    <artifactId>transformers-in-java</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>
    <name>Transformers in Java</name>
    <description>Experimental project for AI and NLP based on Transformer Architecture</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <trainer>org.tarik.train.TrainMlm</trainer>
        <java.version>21</java.version>
        <nd4j.backend>nd4j-native</nd4j.backend>
        <deeplearning4j.version>1.0.0-SNAPSHOT</deeplearning4j.version>
        <guava.version>32.0.1-jre</guava.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <maven.compiler.pugin.version>3.11.0</maven.compiler.pugin.version>
        <maven.exec.pugin.version>3.0.0</maven.exec.pugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <slf4j.version>2.0.10</slf4j.version>
        <jackson.version>2.15.2</jackson.version>
        <apache.commons.version>1.11.0</apache.commons.version>
        <stanford.nlp.version>4.5.5</stanford.nlp.version>
        <morphia.version>2.0.2</morphia.version>
        <logback.version>1.4.14</logback.version>
        <jfree.chart.version>1.5.4</jfree.chart.version>
        <lucene.version>8.9.0</lucene.version>
        <java.cpp.version>1.5.6</java.cpp.version>
        <gcp.logger.version>0.130.28-alpha</gcp.logger.version>
        <janino.version>3.1.6</janino.version>
        <google.protobuf.version>3.19.2</google.protobuf.version>
        <junit.version>5.9.2</junit.version>
        <gson.version>2.10.1</gson.version>
        <jsoup.version>1.16.1</jsoup.version>

        <!-- Properties needed for docker image creation -->
        <model>transformer_mlm</model>
        <dockerRoot>..//docker</dockerRoot>
        <dockerFile>${dockerRoot}//dockerfile_mlm</dockerFile>
        <dockerArchiveFilePath>${dockerRoot}//${model}.tar</dockerArchiveFilePath>
    </properties>

    <repositories>
        <repository>
            <id>snapshots-repo</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>  <!-- Optional, update daily -->
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <!-- This one is needed in order to fix dependency conflict -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${google.protobuf.version}</version>
            </dependency>

            <!--Dependencies for different utils-->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-logging-logback</artifactId>
                <version>${gcp.logger.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-memory</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jfree</groupId>
                <artifactId>jfreechart</artifactId>
                <version>${jfree.chart.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${apache.commons.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!--Dependencies for Deep learning-->
            <dependency>
                <groupId>org.deeplearning4j</groupId>
                <artifactId>deeplearning4j-core</artifactId>
                <version>${deeplearning4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.nd4j</groupId>
                <artifactId>${nd4j.backend}</artifactId>
                <version>${deeplearning4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.deeplearning4j</groupId>
                <artifactId>deeplearning4j-nlp</artifactId>
                <version>${deeplearning4j.version}</version>
            </dependency>

            <!--Dependencies for NLP-->
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-corenlp</artifactId>
                <version>${stanford.nlp.version}</version>
                <!-- Excluded because of security vulnerabilities -->
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>edu.stanford.nlp</groupId>
                <artifactId>stanford-corenlp</artifactId>
                <version>${stanford.nlp.version}</version>
                <classifier>models</classifier>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--Dependencies for DB-->
            <dependency>
                <groupId>dev.morphia.morphia</groupId>
                <artifactId>morphia-core</artifactId>
                <version>${morphia.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>core</module>
        <module>train</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <configuration>
                        <shadedArtifactAttached>true</shadedArtifactAttached>
                        <shadedClassifierName>${shadedClassifier}</shadedClassifierName>
                        <createDependencyReducedPom>true</createDependencyReducedPom>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>org/datanucleus/**</exclude>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                        <resource>reference.conf</resource>
                                    </transformer>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <mainClass>${trainer}</mainClass>
                                    </transformer>
                                </transformers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Maven Enforcer: Ensures user has an up-to-date version of Maven before building -->
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.0.1</version>
                    <executions>
                        <execution>
                            <id>enforce-default</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>[${maven.minimum.version},)</version>
                                        <message>********** Minimum Maven Version is ${maven.minimum.version}. Please
                                            upgrade Maven before continuing (run "mvn --version" to check). **********
                                        </message>
                                    </requireMavenVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.pugin.version}</version>
                    <configuration>
                        <release>${java.version}</release>
                        <compilerArgs>
                            <arg>--enable-preview</arg>
                        </compilerArgs>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${maven.exec.pugin.version}</version>
                    <executions>
                        <execution>
                            <id>docker-build</id>
                            <phase>install</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>build</argument>
                                    <argument>-f</argument>
                                    <argument>${dockerFile}</argument>
                                    <argument>-t</argument>
                                    <argument>${model}:${project.version}</argument>
                                    <argument>--no-cache</argument>
                                    <argument>--rm</argument>
                                    <argument>--build-arg</argument>
                                    <argument>jar_name=${project.build.finalName}-shaded.jar</argument>
                                    <argument>--build-arg</argument>
                                    <argument>java_version=${java.version}</argument>
                                    <argument>.</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>export image</id>
                            <phase>install</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>docker</executable>
                                <arguments>
                                    <argument>save</argument>
                                    <argument>--output</argument>
                                    <argument>${dockerArchiveFilePath}</argument>
                                    <argument>${model}:${project.version}</argument>
                                </arguments>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>